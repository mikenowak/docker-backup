#!/bin/bash
set -e

if ! [[ "$1" ]]
then
    echo "Error: Backup name missing"
    echo "Please specify a backup name, e.g. 'restore 20141104'"
    echo "Finished: FAILURE"
    exit 1
fi

if [ -z "${MYSQL_HOST}" ]; then echo "Error: MYSQL_HOST not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "${MYSQL_USER}" ]; then echo "Error: MYSQL_USER not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "${MYSQL_DATABASE}" ]; then echo "Error: MYSQL_DATABASE not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "${MYSQL_PASSWORD_FILE}" ]; then echo "Error: MYSQL_PASSWORD not set"; echo "Finished: FAILURE"; exit 1; fi
if [ -z "${APP_DIRECTORY}" ]; then echo "Error: APP_DIRECTORY not set"; echo "Finished: FAILURE"; exit 1; fi

if ! [[ $1 =~ ^[a-zA-Z0-9_-]+$ ]]
then
  echo "The given backup name does not match the expected pattern: only characters, digits, underscore and dash are allowed ([a-zA-Z0-9_-])."
  echo 'Finished: FAILURE'
  exit 1
fi

FILES_ARCHIVE="/backup/backup_$1.tar.gz"
SQL_ARCHIVE="/backup/backup_$1.sql.bz2"

if [[ ! -f "${FILES_ARCHIVE}" ]]
then
  echo "The file $FILES_ARCHIVE does not exist. Aborting."
  echo "Finished: FAILURE."
  exit 1
fi

if [[ ! -f "${SQL_ARCHIVE}" ]]
then
  echo "The file $SQL_ARCHIVE does not exist. Aborting."
  echo "Finished: FAILURE."
  exit 1
fi


# cleanup html folder
echo "deleting files from ${APP_DIRECTORY}"
rm -R ${APP_DIRECTORY}*

# restore files
echo "restoring files from ${FILES_ARCHIVE} to ${APP_DIRECTORY}"
tar -xzpf "${FILES_ARCHIVE}" --directory="${APP_DIRECTORY}"

# restore database
echo "restoring data from mysql dump file $SQL_ARCHIVE"
bunzip2 < "${SQL_ARCHIVE}" | mysql --user="${MYSQL_USER}" --password="$(cat ${MYSQL_PASSWORD_FILE})" --host="${MYSQL_HOST}" "${MYSQL_DATABASE}"

echo 'Finished: SUCCESS'
